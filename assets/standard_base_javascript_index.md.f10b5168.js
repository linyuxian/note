import{_ as s,o as a,c as n,N as l}from"./chunks/framework.1bd30c58.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Javascript 规范","slug":"javascript-规范","link":"#javascript-规范","children":[{"level":3,"title":"命名","slug":"命名","link":"#命名","children":[]},{"level":3,"title":"代码格式","slug":"代码格式","link":"#代码格式","children":[]},{"level":3,"title":"字符串","slug":"字符串","link":"#字符串","children":[]},{"level":3,"title":"对象声明","slug":"对象声明","link":"#对象声明","children":[]},{"level":3,"title":"使用 ES6+","slug":"使用-es6","link":"#使用-es6","children":[]},{"level":3,"title":"括号","slug":"括号","link":"#括号","children":[]},{"level":3,"title":"undefined 判断","slug":"undefined-判断","link":"#undefined-判断","children":[]},{"level":3,"title":"条件判断和循环最多三层","slug":"条件判断和循环最多三层","link":"#条件判断和循环最多三层","children":[]},{"level":3,"title":"this 的转换命名","slug":"this-的转换命名","link":"#this-的转换命名","children":[]},{"level":3,"title":"慎用 console.log","slug":"慎用-console-log","link":"#慎用-console-log","children":[]}]}],"relativePath":"standard/base/javascript/index.md","lastUpdated":1678867896000}'),e={name:"standard/base/javascript/index.md"},p=l(`<h2 id="javascript-规范" tabindex="-1">Javascript 规范 <a class="header-anchor" href="#javascript-规范" aria-hidden="true">#</a></h2><h3 id="命名" tabindex="-1">命名 <a class="header-anchor" href="#命名" aria-hidden="true">#</a></h3><ol><li>采用小写驼峰命名 lowerCamelCase，代码中的命名均不能以下划线， 也不能以下划线或美元符号结束</li></ol><p>❌ <code>name/name/name$</code></p><ol start="2"><li>方法名、参数名、成员变量、局部变量都统一使用 <code>lowerCamelCase</code> 风格，必须遵从驼峰形式</li></ol><p>✅ <code>localValue/getHttpMessage()/inputUserId</code></p><p>其中 method 方法命名必须是 动词 或者 动词+名词 形式</p><p>✅ <code>saveShopCarData/openShopCarInfoDialog</code></p><p>❌ <code>save/open/show/go</code></p><p>特此说明，增删查改，详情统一使用如下 5 个单词，不得使用其他（目的是为了统一各个端）</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">add / update / delete / detail / get</span></span>
<span class="line"><span style="color:#A6ACCD;">附： 函数方法常用的动词:</span></span>
<span class="line"><span style="color:#A6ACCD;">get 获取/set 设置,</span></span>
<span class="line"><span style="color:#A6ACCD;">add 增加/remove 删除,</span></span>
<span class="line"><span style="color:#A6ACCD;">create 创建/destory 销毁,</span></span>
<span class="line"><span style="color:#A6ACCD;">start 启动/stop 停止,</span></span>
<span class="line"><span style="color:#A6ACCD;">open 打开/close 关闭,</span></span>
<span class="line"><span style="color:#A6ACCD;">read 读取/write 写入,</span></span>
<span class="line"><span style="color:#A6ACCD;">load 载入/save 保存,</span></span>
<span class="line"><span style="color:#A6ACCD;">begin 开始/end 结束,</span></span>
<span class="line"><span style="color:#A6ACCD;">backup 备份/restore 恢复,</span></span>
<span class="line"><span style="color:#A6ACCD;">import 导入/export 导出,</span></span>
<span class="line"><span style="color:#A6ACCD;">split 分割/merge 合并,</span></span>
<span class="line"><span style="color:#A6ACCD;">inject 注入/extract 提取,</span></span>
<span class="line"><span style="color:#A6ACCD;">attach 附着/detach 脱离,</span></span>
<span class="line"><span style="color:#A6ACCD;">bind 绑定/separate 分离,</span></span>
<span class="line"><span style="color:#A6ACCD;">view 查看/browse 浏览,</span></span>
<span class="line"><span style="color:#A6ACCD;">edit 编辑/modify 修改,</span></span>
<span class="line"><span style="color:#A6ACCD;">select 选取/mark 标记,</span></span>
<span class="line"><span style="color:#A6ACCD;">copy 复制/paste 粘贴,</span></span>
<span class="line"><span style="color:#A6ACCD;">undo 撤销/redo 重做,</span></span>
<span class="line"><span style="color:#A6ACCD;">insert 插入/delete 移除,</span></span>
<span class="line"><span style="color:#A6ACCD;">add 加入/append 添加,</span></span>
<span class="line"><span style="color:#A6ACCD;">clean 清理/clear 清除,</span></span>
<span class="line"><span style="color:#A6ACCD;">index 索引/sort 排序,</span></span>
<span class="line"><span style="color:#A6ACCD;">find 查找/search 搜索,</span></span>
<span class="line"><span style="color:#A6ACCD;">increase 增加/decrease 减少,</span></span>
<span class="line"><span style="color:#A6ACCD;">play 播放/pause 暂停,</span></span>
<span class="line"><span style="color:#A6ACCD;">launch 启动/run 运行,</span></span>
<span class="line"><span style="color:#A6ACCD;">compile 编译/execute 执行,</span></span>
<span class="line"><span style="color:#A6ACCD;">debug 调试/trace 跟踪,</span></span>
<span class="line"><span style="color:#A6ACCD;">observe 观察/listen 监听,</span></span>
<span class="line"><span style="color:#A6ACCD;">build 构建/publish 发布,</span></span>
<span class="line"><span style="color:#A6ACCD;">input 输入/output 输出,</span></span>
<span class="line"><span style="color:#A6ACCD;">encode 编码/decode 解码,</span></span>
<span class="line"><span style="color:#A6ACCD;">encrypt 加密/decrypt 解密,</span></span>
<span class="line"><span style="color:#A6ACCD;">compress 压缩/decompress 解压缩,</span></span>
<span class="line"><span style="color:#A6ACCD;">pack 打包/unpack 解包,</span></span>
<span class="line"><span style="color:#A6ACCD;">parse 解析/emit 生成,</span></span>
<span class="line"><span style="color:#A6ACCD;">connect 连接/disconnect 断开,</span></span>
<span class="line"><span style="color:#A6ACCD;">send 发送/receive 接收,</span></span>
<span class="line"><span style="color:#A6ACCD;">download 下载/upload 上传,</span></span>
<span class="line"><span style="color:#A6ACCD;">refresh 刷新/synchronize 同步,</span></span>
<span class="line"><span style="color:#A6ACCD;">update 更新/revert 复原,</span></span>
<span class="line"><span style="color:#A6ACCD;">lock 锁定/unlock 解锁,</span></span>
<span class="line"><span style="color:#A6ACCD;">check out 签出/check in 签入,</span></span>
<span class="line"><span style="color:#A6ACCD;">submit 提交/commit 交付,</span></span>
<span class="line"><span style="color:#A6ACCD;">push 推/pull 拉,</span></span>
<span class="line"><span style="color:#A6ACCD;">expand 展开/collapse 折叠,</span></span>
<span class="line"><span style="color:#A6ACCD;">enter 进入/exit 退出,</span></span>
<span class="line"><span style="color:#A6ACCD;">abort 放弃/quit 离开,</span></span>
<span class="line"><span style="color:#A6ACCD;">obsolete 废弃/depreciate 废旧,</span></span>
<span class="line"><span style="color:#A6ACCD;">collect 收集/aggregate 聚集</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ol start="3"><li>常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚， 不要嫌名字长</li></ol><p>✅ <code>MAX_STOCK_COUNT</code></p><p>❌ <code>MAX_COUNT</code></p><h3 id="代码格式" tabindex="-1">代码格式 <a class="header-anchor" href="#代码格式" aria-hidden="true">#</a></h3><ol><li>使用 2 个空格进行缩进 ✅</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (x </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> y) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>不同逻辑、不同语义、不同业务的代码之间插入一个空行分隔开来以 提升可读性</li></ol><p>说明：任何情形，没有必要插入多个空行进行隔开。</p><h3 id="字符串" tabindex="-1">字符串 <a class="header-anchor" href="#字符串" aria-hidden="true">#</a></h3><p>统一使用单引号(‘)，不使用双引号(“)。这在创建 HTML 字符串非常有好处：</p><p>✅</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> testDiv </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;div id=&quot;test&quot;&gt;&lt;/div&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>❌</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> testDiv </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;div id=&#39;test&#39;&gt;&lt;/div&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="对象声明" tabindex="-1">对象声明 <a class="header-anchor" href="#对象声明" aria-hidden="true">#</a></h3><ol><li>使用字面值创建对象</li></ol><p>✅ <code>let user = {}</code></p><p>❌ <code>let user = new Object();</code></p><ol start="2"><li>使用字面量来代替对象构造器</li></ol><p>✅ <code>var user = { age: 0, name: 1, city: 3 }</code></p><p>❌</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> user </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Object</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">city </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="使用-es6" tabindex="-1">使用 ES6+ <a class="header-anchor" href="#使用-es6" aria-hidden="true">#</a></h3><p>必须优先使用 ES6+ 中新增的语法糖和函数。这将简化你的程序，并让你的代码更加灵活和可复用。比如箭头函数、<code>await/async</code>，解构，<code>let</code>， for..of 等等。</p><h3 id="括号" tabindex="-1">括号 <a class="header-anchor" href="#括号" aria-hidden="true">#</a></h3><p>下列关键字后必须有大括号（即使代码块的内容只有一行)：<code>if</code>, <code>else</code>, <code>for</code>, <code>while</code>,<code>do</code>, <code>switch</code>,<code>try</code>,<code>catch</code>, <code>finally</code>, <code>with</code>.</p><p>✅</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (condition) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">doSomething</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>❌</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (condition) </span><span style="color:#82AAFF;">doSomething</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="undefined-判断" tabindex="-1">undefined 判断 <a class="header-anchor" href="#undefined-判断" aria-hidden="true">#</a></h3><p>永远不要直接使用 undefined 进行变量判断；使用 typeof 和字符串’undefined’对变量进行判断。</p><p>✅</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> person </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>❌</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (person </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="条件判断和循环最多三层" tabindex="-1">条件判断和循环最多三层 <a class="header-anchor" href="#条件判断和循环最多三层" aria-hidden="true">#</a></h3><blockquote><p>条件判断能使用三目运算符和逻辑运算符解决的，就不要使用条件判断，但是谨记不要写太长的三目运算符。如果超过 了层请抽成西数，并写清楚注释。</p></blockquote><h3 id="this-的转换命名" tabindex="-1">this 的转换命名 <a class="header-anchor" href="#this-的转换命名" aria-hidden="true">#</a></h3><blockquote><p>对上下文 this 的引 用只能使用&#39;self 来命名。</p></blockquote><h3 id="慎用-console-log" tabindex="-1">慎用 console.log <a class="header-anchor" href="#慎用-console-log" aria-hidden="true">#</a></h3><blockquote><p>因 console.1og 大量使用会有性能问题，所以在非 webpack 项目中谨慎使用 1og 功能。</p></blockquote>`,53),o=[p];function t(c,r,i,d,C,D){return a(),n("div",null,o)}const F=s(e,[["render",t]]);export{A as __pageData,F as default};
